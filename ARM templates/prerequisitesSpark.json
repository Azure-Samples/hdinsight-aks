{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
           // "defaultValue": "",
            "metadata": {
                "description": "Provide a prefix for your resource, your resources will be named as [prefix + random string]."
            }
        }   
    },
    "variables": {
        "storageName": "[concat(parameters('resourcePrefix'), 'store')]",
         "msiName": "[concat(parameters('resourcePrefix'), 'MSI')]"
    },
    "functions": [],
    "resources": [
        //MSI creation
        {
            "apiVersion": "2018-11-30",
            "name": "[variables('msiName')]",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "properties": {}
            
        },
        //Storage account and container creation
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-04-01",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                }
            },
            "kind": "StorageV2"
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/', 'container1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/', 'container2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
                {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'), '/default/', 'container3')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        
       
        //Role assignment for Storage account
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(variables('storageName'), resourceGroup().id)]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageName'))]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalId": "[reference(variables('msiName')).principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName'))]",
                "[variables('storageName')]"
                
            ]
        }
     
    ]
}
