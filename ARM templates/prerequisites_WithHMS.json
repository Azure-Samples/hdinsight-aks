{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "String",
            "metadata": {
                "description": "Provide a unique prefix for creating necessary resources required for cluster creation, your resources will be named as [prefix + random string]."
            }
        },
         "location": {
            "defaultValue": "East US 2",
            "allowedValues": [
                "West US 2",
                "West US 3",
                "East US",
                "East US 2",
                "Central India",
                "UK South",
                "Korea Central",
                "West Europe",
                "East Asia"
            ],
            "type": "String",
            "metadata": {
                "description": "Location where your resources will be deployed."
            }
        },
        "sqlServerAdministratorLogin": {
            "type": "String",
            "metadata": {
                "description": "The administrator username of the SQL logical server. Please avoid using admin as username"
            }
        },
        "sqlServerAdministratorLoginPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The administrator password of the SQL logical server."
            }
        },
        "keyVaultSecretName": {
            "type": "String",
            "metadata": {
                "description": "The secret name in the key vault where the SQL Server administrator password will be stored."
            }
        }
    },
    "variables": {
        "storageName": "[concat(parameters('resourcePrefix'), 'store')]",
        "sqlSeverName": "[concat(parameters('resourcePrefix'), 'SqlSever')]",
        "sqlDBName": "[concat(parameters('resourcePrefix'), 'SqlDB')]",
        "keyVaultName": "[concat(parameters('resourcePrefix'), 'KeyVault')]",
        "storageContainer": "[concat(parameters('resourcePrefix'), 'container')]",
        "msiName": "[concat(parameters('resourcePrefix'), 'MSI')]"
    },
    "functions": [],
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('msiName')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('storageName'),'/default/', variables('storageContainer'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('sqlSeverName')]",
            "location": "[parameters('location')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[parameters('sqlServerAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlServerAdministratorLoginPassword')]",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled",
                "version": "12.0",
                "minimalTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlSeverName'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlSeverName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlSeverName'), '/', variables('sqlDBName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlSeverName'))]"
            ],
            "sku": {
                "name": "GP_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "kind": "v12.0,user,vcore",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "licenseType": "LicenseIncluded",
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Geo",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[tenant().tenantId]",
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": false,
                "enabledForDiskEncryption": false,
                "enableRbacAuthorization": true,
                "accessPolicies": [],
                "sku": {
                    "name": "Standard",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "Allow",
                    "bypass": "AzureServices"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "name": "[concat(variables('keyVaultName'), '/', parameters('keyVaultSecretName'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('sqlServerAdministratorLoginPassword')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(variables('storageName'), resourceGroup().id)]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlSeverName'), variables('sqlDBName'))]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlSeverName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName')), '2018-11-30').principalId]"
            },
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageName'))]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(variables('keyVaultName'), resourceGroup().id)]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlSeverName'), variables('sqlDBName'))]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlSeverName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName')), '2018-11-30').principalId]"
            },
            "scope": "[concat('Microsoft.KeyVault/vaults', '/', variables('keyVaultName'))]"
        }
    ]
}
